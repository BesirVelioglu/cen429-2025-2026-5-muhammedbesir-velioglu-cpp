<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="rasp_8h" kind="file" language="C++">
    <compoundname>rasp.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">functional</includes>
    <includes local="no">vector</includes>
    <includedby refid="localsports_8cpp" local="yes">src/LocalSports/src/localsports.cpp</includedby>
    <includedby refid="rasp_8cpp" local="yes">src/LocalSports/src/rasp.cpp</includedby>
    <includedby refid="localsportsapp_8cpp" local="yes">src/LocalSportsapp/src/localsportsapp.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/LocalSports/header/rasp.h</label>
        <link refid="rasp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/LocalSports/header/rasp.h</label>
        <link refid="rasp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/LocalSports/src/localsports.cpp</label>
        <link refid="localsports_8cpp"/>
      </node>
      <node id="3">
        <label>src/LocalSports/src/rasp.cpp</label>
        <link refid="rasp_8cpp"/>
      </node>
      <node id="4">
        <label>src/LocalSportsapp/src/localsportsapp.cpp</label>
        <link refid="localsportsapp_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structteamcore_1_1rasp_1_1_security_event" prot="public">teamcore::rasp::SecurityEvent</innerclass>
    <innerclass refid="structteamcore_1_1rasp_1_1_r_a_s_p_config" prot="public">teamcore::rasp::RASPConfig</innerclass>
    <innernamespace refid="namespaceteamcore">teamcore</innernamespace>
    <innernamespace refid="namespaceteamcore_1_1rasp">teamcore::rasp</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a3fe514c24263c87105082787c7c18dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::DetectDebugger</definition>
        <argsstring>()</argsstring>
        <name>DetectDebugger</name>
        <qualifiedname>teamcore::rasp::DetectDebugger</qualifiedname>
        <briefdescription>
<para>Runtime debugger tespiti (IsDebuggerPresent API ve ptrace kontrolü) </para>
        </briefdescription>
        <detaileddescription>
<para>Windows: IsDebuggerPresent() + NtQueryInformationProcess Linux: ptrace(PTRACE_TRACEME) kontrolü <simplesect kind="return"><para>true ise debugger algılandı </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="93" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="93" bodyend="173" declfile="src/LocalSports/header/rasp.h" declline="26" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a059c359acf49bf78806c802af513b5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::StartDebuggerMonitoring</definition>
        <argsstring>(std::function&lt; void()&gt; callback, int intervalMs=5000)</argsstring>
        <name>StartDebuggerMonitoring</name>
        <qualifiedname>teamcore::rasp::StartDebuggerMonitoring</qualifiedname>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intervalMs</declname>
          <defval>5000</defval>
        </param>
        <briefdescription>
<para>Periyodik debugger izleme başlat (arka plan thread) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Debugger tespit edildiğinde çağrılacak fonksiyon </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intervalMs</parametername>
</parameternamelist>
<parameterdescription>
<para>Kontrol aralığı (milisaniye) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="175" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="175" bodyend="204" declfile="src/LocalSports/header/rasp.h" declline="33" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1aaadad552f8192ce7f2605b1168228457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::StopDebuggerMonitoring</definition>
        <argsstring>()</argsstring>
        <name>StopDebuggerMonitoring</name>
        <qualifiedname>teamcore::rasp::StopDebuggerMonitoring</qualifiedname>
        <briefdescription>
<para>Debugger izlemeyi durdur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="206" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="206" bodyend="213" declfile="src/LocalSports/header/rasp.h" declline="38" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1acfffd0beff666d97fce2c9a3d825c6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string teamcore::rasp::CalculateTextSectionChecksum</definition>
        <argsstring>()</argsstring>
        <name>CalculateTextSectionChecksum</name>
        <qualifiedname>teamcore::rasp::CalculateTextSectionChecksum</qualifiedname>
        <briefdescription>
<para>Executable&apos;ın .text bölümünün SHA-256 checksum&apos;ını hesapla. </para>
        </briefdescription>
        <detaileddescription>
<para>Runtime&apos;da kod bölgesinin hash&apos;ini alır <simplesect kind="return"><para>SHA-256 hash (64 karakter hex string) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="255" column="17" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="255" bodyend="296" declfile="src/LocalSports/header/rasp.h" declline="46" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a901623f332c29fd48aa9a416beb422e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::VerifyTextSectionIntegrity</definition>
        <argsstring>(const std::string &amp;expectedChecksum)</argsstring>
        <name>VerifyTextSectionIntegrity</name>
        <qualifiedname>teamcore::rasp::VerifyTextSectionIntegrity</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>expectedChecksum</declname>
        </param>
        <briefdescription>
<para>.text bölümünün checksum doğrulaması </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expectedChecksum</parametername>
</parameternamelist>
<parameterdescription>
<para>Build-time&apos;da kaydedilen doğru checksum </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true ise doğrulama başarılı, false ise kod değiştirilmiş </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="299" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="299" bodyend="367" declfile="src/LocalSports/header/rasp.h" declline="53" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a74899448486f554bebb2f44c84658d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::BootTimeIntegrityCheck</definition>
        <argsstring>(const std::string &amp;expectedChecksum)</argsstring>
        <name>BootTimeIntegrityCheck</name>
        <qualifiedname>teamcore::rasp::BootTimeIntegrityCheck</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>expectedChecksum</declname>
        </param>
        <briefdescription>
<para>Önyükleme sırasında checksum kontrolü yap. </para>
        </briefdescription>
        <detaileddescription>
<para>Uygulama başlarken .text bölümünü doğrular <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expectedChecksum</parametername>
</parameternamelist>
<parameterdescription>
<para>Bilinen doğru checksum </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false ise uygulama sonlandırılmalı </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="369" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="369" bodyend="380" declfile="src/LocalSports/header/rasp.h" declline="61" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1abc2bfd5fd35be23413c3cd7c91caa020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int teamcore::rasp::DetectIATHooks</definition>
        <argsstring>()</argsstring>
        <name>DetectIATHooks</name>
        <qualifiedname>teamcore::rasp::DetectIATHooks</qualifiedname>
        <briefdescription>
<para>Import Address Table (Windows) hook tespiti. </para>
        </briefdescription>
        <detaileddescription>
<para>IAT&apos;daki fonksiyon pointer&apos;larını kontrol eder <simplesect kind="return"><para>Değiştirilen fonksiyon sayısı (0 ise temiz) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="428" column="9" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="428" bodyend="431" declfile="src/LocalSports/header/rasp.h" declline="69" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a19e83bdd3db428e5ccb129a78e1205e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int teamcore::rasp::DetectPLTHooks</definition>
        <argsstring>()</argsstring>
        <name>DetectPLTHooks</name>
        <qualifiedname>teamcore::rasp::DetectPLTHooks</qualifiedname>
        <briefdescription>
<para>Procedure Linkage Table (Linux) hook tespiti. </para>
        </briefdescription>
        <detaileddescription>
<para>PLT/GOT tablosundaki pointer&apos;ları kontrol eder <simplesect kind="return"><para>Değiştirilen entry sayısı (0 ise temiz) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="435" column="9" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="435" bodyend="463" declfile="src/LocalSports/header/rasp.h" declline="76" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1afcfa29d7403aa4b2ffca1716832679d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::IsThunkModified</definition>
        <argsstring>(const std::string &amp;functionName)</argsstring>
        <name>IsThunkModified</name>
        <qualifiedname>teamcore::rasp::IsThunkModified</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>functionName</declname>
        </param>
        <briefdescription>
<para>Beklenmeyen fonksiyon pointer kontrolü (thunk analizi) </para>
        </briefdescription>
        <detaileddescription>
<para>Kritik fonksiyonların (malloc, strcpy, vb) hook edilip edilmediğini kontrol eder <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionName</parametername>
</parameternamelist>
<parameterdescription>
<para>Kontrol edilecek fonksiyon adı </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true ise hook tespit edildi </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="471" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="471" bodyend="490" declfile="src/LocalSports/header/rasp.h" declline="84" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a807b098c27296fbf981ae7785a51ff1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int teamcore::rasp::ScanCriticalFunctions</definition>
        <argsstring>()</argsstring>
        <name>ScanCriticalFunctions</name>
        <qualifiedname>teamcore::rasp::ScanCriticalFunctions</qualifiedname>
        <briefdescription>
<para>Tüm kritik fonksiyonların hook kontrolü </para>
        </briefdescription>
        <detaileddescription>
<para>Önceden tanımlı kritik fonksiyon listesini tarar <simplesect kind="return"><para>Hook tespit edilen fonksiyon sayısı </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="492" column="9" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="492" bodyend="505" declfile="src/LocalSports/header/rasp.h" declline="91" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1ae52211ed6b1f31d167a1a9edfccaaf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::LogSecurityEvent</definition>
        <argsstring>(const SecurityEvent &amp;event)</argsstring>
        <name>LogSecurityEvent</name>
        <qualifiedname>teamcore::rasp::LogSecurityEvent</qualifiedname>
        <param>
          <type>const SecurityEvent &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Güvenlik olayını kaydet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Olay bilgisi </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true ise kayıt başarılı </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="508" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="508" bodyend="526" declfile="src/LocalSports/header/rasp.h" declline="99" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a91ad508756da2b4a880b39e72b8a2071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::HandleCriticalEvent</definition>
        <argsstring>(const std::string &amp;eventType, const std::string &amp;description, bool terminateApp=true)</argsstring>
        <name>HandleCriticalEvent</name>
        <qualifiedname>teamcore::rasp::HandleCriticalEvent</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>eventType</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>terminateApp</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Kritik güvenlik olayını kaydet ve fail-closed davranış göster. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventType</parametername>
</parameternamelist>
<parameterdescription>
<para>Olay tipi (örn: &quot;DEBUGGER_DETECTED&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Olay açıklaması </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>terminateApp</parametername>
</parameternamelist>
<parameterdescription>
<para>true ise uygulamayı sonlandır </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="528" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="528" bodyend="547" declfile="src/LocalSports/header/rasp.h" declline="107" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a9c49a9e1a8cac4189db46585a655b343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; SecurityEvent &gt;</type>
        <definition>std::vector&lt; SecurityEvent &gt; teamcore::rasp::GetSecurityEventLog</definition>
        <argsstring>()</argsstring>
        <name>GetSecurityEventLog</name>
        <qualifiedname>teamcore::rasp::GetSecurityEventLog</qualifiedname>
        <briefdescription>
<para>Tüm güvenlik olaylarını getir. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Olay listesi </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="549" column="17" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="549" bodyend="552" declfile="src/LocalSports/header/rasp.h" declline="115" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a07e65abc82f54ea47b0b9ce8cbf5050c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::ClearSecurityLog</definition>
        <argsstring>()</argsstring>
        <name>ClearSecurityLog</name>
        <qualifiedname>teamcore::rasp::ClearSecurityLog</qualifiedname>
        <briefdescription>
<para>Güvenlik log dosyasını temizle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="554" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="554" bodyend="560" declfile="src/LocalSports/header/rasp.h" declline="120" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a0293f9b3b50efd7c112cfa2400de65ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::VerifyProcessIsolation</definition>
        <argsstring>()</argsstring>
        <name>VerifyProcessIsolation</name>
        <qualifiedname>teamcore::rasp::VerifyProcessIsolation</qualifiedname>
        <briefdescription>
<para>Süreç izolasyonu kontrolü </para>
        </briefdescription>
        <detaileddescription>
<para>Uygulamanın güvenli bir ortamda çalışıp çalışmadığını kontrol eder <simplesect kind="return"><para>true ise izole ortam güvenli </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="563" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="563" bodyend="591" declfile="src/LocalSports/header/rasp.h" declline="128" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a17a4eabede4484deea82b9acf7ccff44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::FailClosedShutdown</definition>
        <argsstring>(const std::string &amp;reason)</argsstring>
        <name>FailClosedShutdown</name>
        <qualifiedname>teamcore::rasp::FailClosedShutdown</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Fail-closed davranış: Güvenlik tehdidi durumunda uygulamayı sonlandır. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>Sonlandırma nedeni </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="593" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="593" bodyend="609" declfile="src/LocalSports/header/rasp.h" declline="134" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a097fbdfc036635e67228fcf8c15b099c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::SecureTerminate</definition>
        <argsstring>()</argsstring>
        <name>SecureTerminate</name>
        <qualifiedname>teamcore::rasp::SecureTerminate</qualifiedname>
        <briefdescription>
<para>Güvenli durum kaydı (crash dump olmadan çıkış) </para>
        </briefdescription>
        <detaileddescription>
<para>Hassas verileri temizledikten sonra uygulamayı sonlandırır </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="611" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="611" bodyend="621" declfile="src/LocalSports/header/rasp.h" declline="140" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1acfa334ed52bbd4e42ab7abfad44811ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::InitializeRASP</definition>
        <argsstring>(const std::string &amp;expectedChecksum, bool autoTerminateOnThreat=true)</argsstring>
        <name>InitializeRASP</name>
        <qualifiedname>teamcore::rasp::InitializeRASP</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>expectedChecksum</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>autoTerminateOnThreat</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>RASP sistemini başlat. </para>
        </briefdescription>
        <detaileddescription>
<para>Tüm runtime korumalarını aktive eder:<itemizedlist>
<listitem><para>Debugger monitoring</para>
</listitem><listitem><para>Checksum verification</para>
</listitem><listitem><para>Hook detection</para>
</listitem><listitem><para>Event logging <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expectedChecksum</parametername>
</parameternamelist>
<parameterdescription>
<para>.text bölümünün bilinen checksum&apos;ı </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>autoTerminateOnThreat</parametername>
</parameternamelist>
<parameterdescription>
<para>true ise tehdit algılandığında otomatik sonlanma </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true ise başarılı, false ise başlatma hatası </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="624" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="624" bodyend="679" declfile="src/LocalSports/header/rasp.h" declline="154" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a4b8d4607e2578698d18ef17f51d79628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::ShutdownRASP</definition>
        <argsstring>()</argsstring>
        <name>ShutdownRASP</name>
        <qualifiedname>teamcore::rasp::ShutdownRASP</qualifiedname>
        <briefdescription>
<para>RASP sistemini durdur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="681" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="681" bodyend="692" declfile="src/LocalSports/header/rasp.h" declline="159" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1adaafa9c1e483547f753d9aaffb58f38e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::IsRASPActive</definition>
        <argsstring>()</argsstring>
        <name>IsRASPActive</name>
        <qualifiedname>teamcore::rasp::IsRASPActive</qualifiedname>
        <briefdescription>
<para>RASP durumu sorgulama. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true ise RASP aktif </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="694" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="694" bodyend="696" declfile="src/LocalSports/header/rasp.h" declline="165" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a2bf6d0cb586da649dab36781003d8067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool teamcore::rasp::PerformSecurityScan</definition>
        <argsstring>()</argsstring>
        <name>PerformSecurityScan</name>
        <qualifiedname>teamcore::rasp::PerformSecurityScan</qualifiedname>
        <briefdescription>
<para>Periyodik güvenlik kontrolü yap. </para>
        </briefdescription>
        <detaileddescription>
<para>Debugger, hook, integrity kontrollerini yapar <simplesect kind="return"><para>true ise tüm kontroller başarılı </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="698" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="698" bodyend="731" declfile="src/LocalSports/header/rasp.h" declline="172" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1aa111f8946bff31b16ecaabbebfef6111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void teamcore::rasp::ConfigureRASP</definition>
        <argsstring>(const RASPConfig &amp;config)</argsstring>
        <name>ConfigureRASP</name>
        <qualifiedname>teamcore::rasp::ConfigureRASP</qualifiedname>
        <param>
          <type>const RASPConfig &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>RASP yapılandırması ayarla. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Yapılandırma parametreleri </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="734" column="10" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="734" bodyend="736" declfile="src/LocalSports/header/rasp.h" declline="188" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceteamcore_1_1rasp_1a80257b3b67e746443cf5a3c142987844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RASPConfig</type>
        <definition>RASPConfig teamcore::rasp::GetRASPConfig</definition>
        <argsstring>()</argsstring>
        <name>GetRASPConfig</name>
        <qualifiedname>teamcore::rasp::GetRASPConfig</qualifiedname>
        <briefdescription>
<para>Aktif yapılandırmayı getir. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mevcut RASP yapılandırması </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalSports/src/rasp.cpp" line="738" column="16" bodyfile="src/LocalSports/src/rasp.cpp" bodystart="738" bodyend="740" declfile="src/LocalSports/header/rasp.h" declline="194" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespaceteamcore" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceteamcore" kindref="compound">teamcore</ref><sp/>{</highlight></codeline>
<codeline lineno="9" refid="namespaceteamcore_1_1rasp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceteamcore_1_1rasp" kindref="compound">rasp</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>Runtime<sp/>Security<sp/>Status<sp/>===================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structteamcore_1_1rasp_1_1_security_event" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structteamcore_1_1rasp_1_1_security_event" kindref="compound">SecurityEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="13" refid="structteamcore_1_1rasp_1_1_security_event_1a0400a3490b69bb35717d57895f447d9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structteamcore_1_1rasp_1_1_security_event_1a0400a3490b69bb35717d57895f447d9d" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="14" refid="structteamcore_1_1rasp_1_1_security_event_1af051504600f9401729cf433c6fbf55ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structteamcore_1_1rasp_1_1_security_event_1af051504600f9401729cf433c6fbf55ac" kindref="member">eventType</ref>;</highlight></codeline>
<codeline lineno="15" refid="structteamcore_1_1rasp_1_1_security_event_1a63788e2305cc91af38e78453f071ce58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structteamcore_1_1rasp_1_1_security_event_1a63788e2305cc91af38e78453f071ce58" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="16" refid="structteamcore_1_1rasp_1_1_security_event_1afdb9d81297bfdf3be8e2994e1c0b638a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_security_event_1afdb9d81297bfdf3be8e2994e1c0b638a" kindref="member">severity</ref>;<sp/></highlight><highlight class="comment">//<sp/>1=info,<sp/>2=warning,<sp/>3=critical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>IsDebuggerPresent<sp/>&amp;<sp/>ptrace<sp/>===================</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a3fe514c24263c87105082787c7c18dc7" kindref="member">DetectDebugger</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a059c359acf49bf78806c802af513b5f7" kindref="member">StartDebuggerMonitoring</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;<sp/>callback,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intervalMs<sp/>=<sp/>5000);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1aaadad552f8192ce7f2605b1168228457" kindref="member">StopDebuggerMonitoring</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>.text<sp/>Section<sp/>Checksum<sp/>Verification<sp/>===================</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespaceteamcore_1_1rasp_1acfffd0beff666d97fce2c9a3d825c6db" kindref="member">CalculateTextSectionChecksum</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a901623f332c29fd48aa9a416beb422e5" kindref="member">VerifyTextSectionIntegrity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expectedChecksum);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a74899448486f554bebb2f44c84658d72" kindref="member">BootTimeIntegrityCheck</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expectedChecksum);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>IAT/PLT<sp/>Hook<sp/>Detection<sp/>===================</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1abc2bfd5fd35be23413c3cd7c91caa020" kindref="member">DetectIATHooks</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a19e83bdd3db428e5ccb129a78e1205e3" kindref="member">DetectPLTHooks</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1afcfa29d7403aa4b2ffca1716832679d4" kindref="member">IsThunkModified</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>functionName);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a807b098c27296fbf981ae7785a51ff1f" kindref="member">ScanCriticalFunctions</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>Security<sp/>Event<sp/>Logging<sp/>===================</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1ae52211ed6b1f31d167a1a9edfccaaf47" kindref="member">LogSecurityEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_security_event" kindref="compound">SecurityEvent</ref>&amp;<sp/>event);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a91ad508756da2b4a880b39e72b8a2071" kindref="member">HandleCriticalEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>eventType,<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>description,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>terminateApp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SecurityEvent&gt;<sp/><ref refid="namespaceteamcore_1_1rasp_1a9c49a9e1a8cac4189db46585a655b343" kindref="member">GetSecurityEventLog</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a07e65abc82f54ea47b0b9ce8cbf5050c" kindref="member">ClearSecurityLog</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>Process<sp/>Isolation<sp/>&amp;<sp/>Fail-Closed<sp/>===================</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a0293f9b3b50efd7c112cfa2400de65ca" kindref="member">VerifyProcessIsolation</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a17a4eabede4484deea82b9acf7ccff44" kindref="member">FailClosedShutdown</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>reason);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a097fbdfc036635e67228fcf8c15b099c" kindref="member">SecureTerminate</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>Comprehensive<sp/>RASP<sp/>Initialization<sp/>===================</highlight></codeline>
<codeline lineno="154"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1acfa334ed52bbd4e42ab7abfad44811ea" kindref="member">InitializeRASP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expectedChecksum,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoTerminateOnThreat<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a4b8d4607e2578698d18ef17f51d79628" kindref="member">ShutdownRASP</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1adaafa9c1e483547f753d9aaffb58f38e" kindref="member">IsRASPActive</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1a2bf6d0cb586da649dab36781003d8067" kindref="member">PerformSecurityScan</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>===================<sp/>Configuration<sp/>===================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config" kindref="compound">RASPConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="176" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1ad8177351c27e6622c074ec7da887d456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1ad8177351c27e6622c074ec7da887d456" kindref="member">enableDebuggerDetection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1a9768dbe824b445ffe0570eee10945433" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1a9768dbe824b445ffe0570eee10945433" kindref="member">enableChecksumVerification</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1a5d8e2f9c7e88afae7dd5b556515b676c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1a5d8e2f9c7e88afae7dd5b556515b676c" kindref="member">enableHookDetection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1aa0e649448d63a2bd83438436549a4ccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1aa0e649448d63a2bd83438436549a4ccb" kindref="member">autoTerminateOnThreat</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1abdd6bcb5c60f0cb8a2d14e9ed86eae3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1abdd6bcb5c60f0cb8a2d14e9ed86eae3a" kindref="member">monitoringIntervalMs</ref><sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="181" refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1a1d12e0375b831c64fe6493203a7b1a27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config_1a1d12e0375b831c64fe6493203a7b1a27" kindref="member">logFilePath</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rasp_security.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceteamcore_1_1rasp_1aa111f8946bff31b16ecaabbebfef6111" kindref="member">ConfigureRASP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config" kindref="compound">RASPConfig</ref>&amp;<sp/>config);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structteamcore_1_1rasp_1_1_r_a_s_p_config" kindref="compound">RASPConfig</ref><sp/><ref refid="namespaceteamcore_1_1rasp_1a80257b3b67e746443cf5a3c142987844" kindref="member">GetRASPConfig</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rasp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>teamcore</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/LocalSports/header/rasp.h"/>
  </compounddef>
</doxygen>
